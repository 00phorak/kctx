name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: kctx-linux-amd64
            extension: ''
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            artifact_name: kctx-windows-amd64
            extension: '.exe'
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            artifact_name: kctx-macos-amd64
            extension: ''
            target: x86_64-apple-darwin
          - os: macos-latest
            artifact_name: kctx-macos-arm64
            extension: ''
            target: aarch64-apple-darwin

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Get package name
        shell: bash
        run: |
          echo "PACKAGE_NAME=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[0].name')" >> $GITHUB_ENV

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Rename binary
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv target/${{ matrix.target }}/release/${{ env.PACKAGE_NAME }}.exe ${{ matrix.artifact_name }}${{ matrix.extension }}
          else
            mv target/${{ matrix.target }}/release/${{ env.PACKAGE_NAME }} ${{ matrix.artifact_name }}${{ matrix.extension }}
          fi

      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.artifact_name }}${{ matrix.extension }}
          asset_name: ${{ matrix.artifact_name }}${{ matrix.extension }}
          tag: ${{ github.ref }}
          overwrite: true
